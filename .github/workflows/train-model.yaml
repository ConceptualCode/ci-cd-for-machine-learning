name: CML CI/CD Pipeline

permissions:
  actions: write
  contents: write
  packages: write
  pull-requests: write

on:
  pull_request:
    branches:
      - main
jobs:
  launch-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v1
      - name: Deploy runner on AWS EC2
        env:
          REPO_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cml runner launch \
          --cloud=aws \
          --cloud-region=us-west \
          --cloud-type=p2.xlarge \
          --cloud-hdd-size=64 \
          --labels=cml-gpu
          --repo-token ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  train-and-report:
    runs-on: [self-hosted, cml-gpu]
    needs: launch-runner
    timeout-minutes: 50400 # 35 days
    container:
      image: docker://iterativeai/cml:0-dvc2-base1-gpu
      options: --gpus all
    steps:
      - uses: actions/checkout@v3
      - name: Train model
        run: |
          dvc pull data
          pip install -r requirements.txt
          dvc repro
      - name: Create CML report
        run: |
          git show origin/main:image.png > image-main.png
          cat <<EOF > report.md
          # Model Performance Report
          ## Workspace vs. Main
          ![](./image.png "Workspace") ![](./image-main.png "Main")
          ## Training metrics
          $(dvc params diff main --show-md)
          ## GPU info
          $(cat gpu_info.txt)
          EOF
          cml comment create report.md
        env:
          REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: train-and-report
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t tonysoro/ibo-sentiment-app:latest .
      - name: Push Docker image to Docker Hub
        run: docker push tonysoro/ibo-sentiment-app:latest
      - name: Deploy to AWS ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-1"
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment